<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="XSplashScreenTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>